
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package koneksi;


import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;
import koneksi.DB;


/**
 *
 * @author ASUS
 */
public class products extends javax.swing.JFrame {

    private static void setModel(DefaultTableModel model) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * Creates new form products
     */
    public products() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tb_load = new javax.swing.JButton();
        tb_insert = new javax.swing.JButton();
        tb_update = new javax.swing.JButton();
        tb_delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tb_load.setText("Load");
        tb_load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_loadActionPerformed(evt);
            }
        });

        tb_insert.setText("Insert");
        tb_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_insertActionPerformed(evt);
            }
        });

        tb_update.setText("Update");
        tb_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_updateActionPerformed(evt);
            }
        });

        tb_delete.setText("Delete");
        tb_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_deleteActionPerformed(evt);
            }
        });

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(tb_load, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(tb_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tb_update, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(tb_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tb_insert, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tb_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tb_update, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tb_load, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tb_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_updateActionPerformed
       int selectedRow = tabel.getSelectedRow();

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih dulu baris yang akan di-update.");
        return;
    }

    // Ambil data dari baris yang dipilih
    int kode = Integer.parseInt(tabel.getValueAt(selectedRow, 0).toString());
    String namaLama = tabel.getValueAt(selectedRow, 1).toString();
    int hargaLama = Integer.parseInt(tabel.getValueAt(selectedRow, 2).toString());
    int stockLama = Integer.parseInt(tabel.getValueAt(selectedRow, 3).toString());

    // Minta input baru dari user
    String namaBaru = JOptionPane.showInputDialog(this, "Nama baru:", namaLama);
    String hargaBaruStr = JOptionPane.showInputDialog(this, "Harga baru:", hargaLama);
    String stockBaruStr = JOptionPane.showInputDialog(this, "Stock baru:", stockLama);

    try {
        int hargaBaru = Integer.parseInt(hargaBaruStr);
        int stockBaru = Integer.parseInt(stockBaruStr);

        String sql = "UPDATE products SET nama = ?, harga = ?, stock = ? WHERE kode = ?";
        Connection conn = DB.getConnection();
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, namaBaru);
        pst.setInt(2, hargaBaru);
        pst.setInt(3, stockBaru);
        pst.setInt(4, kode);

        int affected = pst.executeUpdate();
        if (affected > 0) {
            JOptionPane.showMessageDialog(this, "Data berhasil diupdate.");
            tb_loadActionPerformed(null); // reload tabel
        } else {
            JOptionPane.showMessageDialog(this, "Gagal update data.");
        }

        pst.close();
        conn.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
    }//GEN-LAST:event_tb_updateActionPerformed

    private void tb_loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_loadActionPerformed
       DefaultTableModel model = new DefaultTableModel();
model.addColumn("Kode");
model.addColumn("Nama");
model.addColumn("Harga");
model.addColumn("Stock");

try {
    String query = "SELECT * FROM products";
    Connection conn = DB.getConnection(); // Pastikan class DB ada dan method getConnection() benar
    Statement st = conn.createStatement();
    ResultSet rs = st.executeQuery(query);

    while (rs.next()) {
        model.addRow(new Object[]{
            rs.getInt("kode"),
            rs.getString("nama"),
            rs.getInt("harga"),
            rs.getInt("stock")
        });
    }

    tabel.setModel(model); // Ganti 'tabel' sesuai nama JTable kamu

} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Gagal Load Data: " + e.getMessage());
}

    }//GEN-LAST:event_tb_loadActionPerformed

    private void tb_insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_insertActionPerformed
     JTextField tfKode = new JTextField(10);
JTextField tfNama = new JTextField(20);
JTextField tfHarga = new JTextField(10);
JTextField tfStock = new JTextField(10);

// Panel baris pertama (horizontal)
JPanel row = new JPanel(new FlowLayout(FlowLayout.LEFT));
row.add(new JLabel("Kode:"));
row.add(tfKode);
row.add(Box.createHorizontalStrut(10)); // jarak antar komponen

row.add(new JLabel("Nama:"));
row.add(tfNama);
row.add(Box.createHorizontalStrut(10));

row.add(new JLabel("Harga:"));
row.add(tfHarga);
row.add(Box.createHorizontalStrut(10));

row.add(new JLabel("Stock:"));
row.add(tfStock);

// Panel utama
JPanel inputPanel = new JPanel();
inputPanel.setLayout(new BorderLayout());
inputPanel.add(row, BorderLayout.CENTER);

// Tampilkan dalam JOptionPane
int result = JOptionPane.showConfirmDialog(null, inputPanel, "Masukkan Data Produk Baru",
        JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);

if (result == JOptionPane.OK_OPTION) {
    try {
        Connection conn = DB.getConnection();
        String sql = "INSERT INTO products (kode, nama, harga, stock) VALUES (?, ?, ?, ?)";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, Integer.parseInt(tfKode.getText()));
        ps.setString(2, tfNama.getText());
        ps.setInt(3, Integer.parseInt(tfHarga.getText()));
        ps.setInt(4, Integer.parseInt(tfStock.getText()));
        ps.executeUpdate();
        JOptionPane.showMessageDialog(null, "Data berhasil disimpan!");
         tb_loadActionPerformed(null);
 
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Gagal insert: " + e.getMessage());
    }
}      
    }//GEN-LAST:event_tb_insertActionPerformed

    private void tb_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_deleteActionPerformed
        int selectedRow = tabel.getSelectedRow(); // Ambil baris yang dipilih

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris yang akan dihapus.");
        return;
    }

    int confirm = JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
    if (confirm != JOptionPane.YES_OPTION) {
        return;
    }

    // Ambil nilai kode dari kolom pertama (0) — asumsi 'kode' adalah primary key
    int kode = Integer.parseInt(tabel.getValueAt(selectedRow, 0).toString());

    try {
        Connection conn = DB.getConnection();
        String sql = "DELETE FROM products WHERE kode = ?";
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setInt(1, kode);

        int affected = pst.executeUpdate();
        if (affected > 0) {
            JOptionPane.showMessageDialog(this, "Data berhasil dihapus.");
            tb_loadActionPerformed(null); // Refresh tabel
        } else {
            JOptionPane.showMessageDialog(this, "Data gagal dihapus.");
        }

        pst.close();
        conn.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_tb_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new products().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabel;
    private javax.swing.JButton tb_delete;
    private javax.swing.JButton tb_insert;
    private javax.swing.JButton tb_load;
    private javax.swing.JButton tb_update;
    // End of variables declaration//GEN-END:variables

    private void loadData() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
